% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outputs_surv.R
\name{pm}
\alias{pm}
\title{Estimation of the conditional average treatment effect (CATE) score for count, survival and continuous data}
\usage{
pm(
  response,
  cate.model,
  ps.model,
  data,
  score.method,
  init.model = NULL,
  ipcw.model = NULL,
  followup.time = NULL,
  tau0 = NULL,
  surv.min = 0.025,
  ipcw.method = "breslow",
  higher.y = TRUE,
  prop.cutoff = seq(0.5, 1, length = 6),
  ps.method = "glm",
  minPS = 0.01,
  maxPS = 0.99,
  initial.predictor.method = NULL,
  xvar.smooth.score = NULL,
  xvar.smooth.init = NULL,
  tree.depth = 2,
  n.trees.rf = 1000,
  n.trees.boosting = 200,
  B = 3,
  Kfold = 5,
  error.maxNR = 0.001,
  max.iterNR = 150,
  tune = c(0.5, 2),
  seed = NULL,
  plot.gbmperf = TRUE
)
}
\arguments{
\item{response}{A string describing the type of outcome in the data. Allowed values include
"count" (see \code{\link{cvcount}()}), "survival" (see \code{\link{cvsurv}()}) and "continuous" (see \code{\link{cvmean}()}) .}

\item{cate.model}{A formula describing the outcome model to be fitted.
The outcome must appear on the left-hand side. For survival outcomes, a \code{Surv} object
must be used to describe the outcome.}

\item{ps.model}{A formula describing the propensity score (PS) model to be fitted. The treatment must
appear on the left-hand side. The treatment must be a numeric vector coded as 0/1.
If data are from a randomized controlled trial, specify \code{ps.model = ~1} as an intercept-only model.}

\item{data}{A data frame containing the variables in the outcome, propensity score, and inverse
probability of censoring models (if specified); a data frame with \code{n} rows (1 row per observation).}

\item{score.method}{A vector of one or multiple methods to estimate the CATE score.
Allowed values are: \code{'boosting'}, \code{'twoReg'}, \code{'contrastReg'}, \code{'poisson'} (count and survival outcomes only),
\code{'randomForest'} (survival, continuous outcomes only), \code{negBin} (count outcomes only), \code{'gam'} (continuous outcomes only),
\code{'gaussian'} (continuous outcomes only).}

\item{init.model}{A formula describing the initial predictor model. The outcome must appear on the left-hand side.
It must be specified when \code{score.method = contrastReg} or \code{twoReg}.}

\item{ipcw.model}{A formula describing the inverse probability of censoring weighting (IPCW)
model to be fitted. The left-hand side must be empty. Only applies for survival outcomes.
Default is \code{NULL}, which corresponds to specifying the IPCW with the same covariates
as the outcome model \code{cate.model}, plus the treatment.}

\item{followup.time}{A column name in \code{data} specifying the maximum follow-up time,
interpreted as the potential censoring time. Only applies for survival outcomes.
Default is \code{NULL}, which corresponds to unknown potential censoring time.}

\item{tau0}{The truncation time for defining restricted mean time lost. Only applies for
survival outcomes. Default is \code{NULL}, which corresponds to setting the truncation time as the
maximum survival time in the data.}

\item{surv.min}{Lower truncation limit for the probability of being censored.
It must be a positive value and should be chosen close to 0. Only applies for survival
outcomes. Default is \code{0.025}.}

\item{ipcw.method}{A character value for the censoring model. Only applies for survival
outcomes. Allowed values are: \code{'breslow'} (Cox regression with Breslow estimator of t
he baseline survivor function), \code{'aft (exponential)'}, \code{'aft (weibull)'},
\code{'aft (lognormal)'} or \code{'aft (loglogistic)'} (accelerated failure time model
with different distributions for y variable). Default is \code{'breslow'}.}

\item{higher.y}{A logical value indicating whether higher (\code{TRUE}) or
lower (\code{FALSE}) values of the outcome are more desirable. Default is \code{TRUE}.}

\item{prop.cutoff}{A vector of numerical values (in (0, 1]) specifying percentiles of the
estimated log CATE scores to define nested subgroups. Each element represents the cutoff to
separate observations in nested subgroups (below vs above cutoff).
The length of \code{prop.cutoff} is the number of nested subgroups.
An equally-spaced sequence of proportions ending with 1 is recommended.
Default is \code{seq(0.5, 1, length = 6)}.}

\item{ps.method}{A character value for the method to estimate the propensity score.
Allowed values include one of:
\code{'glm'} for logistic regression with main effects only (default), or
\code{'lasso'} for a logistic regression with main effects and LASSO penalization on
two-way interactions (added to the model if interactions are not specified in \code{ps.model}).
Relevant only when \code{ps.model} has more than one variable.}

\item{minPS}{A numerical value (in [0, 1]) below which estimated propensity scores should be
truncated. Default is \code{0.01}.}

\item{maxPS}{A numerical value (in (0, 1]) above which estimated propensity scores should be
truncated. Must be strictly greater than \code{minPS}. Default is \code{0.99}.}

\item{initial.predictor.method}{A character vector for the method used to get initial
outcome predictions conditional on the covariates specified in \code{cate.model}. Only applies
when \code{score.method} includes \code{'twoReg'} or \code{'contrastReg'}.Allowed values include one of
\code{'randomForest'} (survival outcomes only), \code{'boosting'}, \code{'logistic'}
(survival outcomes only, fast), \code{'poisson'} (count outcomes only, fast), \code{'gaussian'} (continuous outcomes only) and
\code{'gam'} (count and continuous outcomes only). Default is \code{NULL}, which assigns \code{'boosting'}
for count outcomes and \code{'randomForest'} for survival outcomes.}

\item{xvar.smooth.score}{A vector of characters indicating the name of the variables used as
the smooth terms if \code{score.method = 'gam'}. The variables must be selected
from the variables listed in \code{cate.model}.}

\item{xvar.smooth.init}{A vector of characters indicating the name of the variables used as
the smooth terms if \code{initial.predictor.method = 'gam'}. The variables must be selected
from the variables listed in \code{init.model}.
Default is \code{NULL}, which uses all variables in \code{init.model}.}

\item{tree.depth}{A positive integer specifying the depth of individual trees in boosting
(usually 2-3). Used only if \code{score.method = 'boosting'} or
if \code{initial.predictor.method = 'boosting'} with \code{score.method = 'twoReg'} or
\code{'contrastReg'}. Default is 2.}

\item{n.trees.rf}{A positive integer specifying the maximum number of trees in random forest.
Used if \code{score.method = 'ranfomForest'} or if \code{initial.predictor.method = 'randomForest'}
with \code{score.method = 'twoReg'} or \code{'contrastReg'}. Only applies for survival outcomes.
Default is \code{1000}.}

\item{n.trees.boosting}{A positive integer specifying the maximum number of trees in boosting
(usually 100-1000). Used if \code{score.method = 'boosting'} or
if \code{initial.predictor.method = 'boosting'} with \code{score.method = 'twoReg'} or
\code{'contrastReg'}. Default is \code{200}.}

\item{B}{A positive integer specifying the number of time cross-fitting is repeated in
\code{score.method = 'twoReg'} and \code{'contrastReg'}. Default is \code{3}.}

\item{Kfold}{A positive integer specifying the number of folds used in cross-fitting
to partition the data in \code{score.method = 'twoReg'} and \code{'contrastReg'}.
Default is \code{5}.}

\item{error.maxNR}{A numerical value > 0 indicating the minimum value of the mean absolute
error in Newton Raphson algorithm. Used only if \code{score.method = 'contrastReg'}.
Default is \code{0.001}.}

\item{max.iterNR}{A positive integer indicating the maximum number of iterations in the
Newton Raphson algorithm. Used only if \code{score.method = 'contrastReg'}.
Default is \code{150}.}

\item{tune}{A vector of 2 numerical values > 0 specifying tuning parameters for the
Newton Raphson algorithm. \code{tune[1]} is the step size, \code{tune[2]} specifies a
quantity to be added to diagonal of the slope matrix to prevent singularity.
Used only if \code{score.method = 'contrastReg'}. Default is \code{c(0.5, 2)}.}

\item{seed}{An optional integer specifying an initial randomization seed for reproducibility.
Default is \code{NULL}, corresponding to no seed.}

\item{plot.gbmperf}{A logical value indicating whether to plot the performance measures in
boosting. Used only if \code{score.method = 'boosting'} or if \code{score.method = 'twoReg'}
or \code{'contrastReg'} and \code{initial.predictor.method = 'boosting'}. Default is \code{TRUE}.}
}
\value{
For count response, see description of outputs in \code{\link{pmcount}()}.
For survival response, see description of outputs in \code{\link{pmsurv}()}.
}
\description{
Provides singly robust and doubly robust estimation of CATE score for count, survival and continuous data with
up the following scoring methods among the following: Random forest (survival, continuous only), boosting,
poisson regression (count, survival only), two regressions, contrast regression, negative binomial regression (count only),
linear regression (continuous only), and generalized additive model (continuous only).
}
\details{
For count response, see details in \code{\link{pmcount}()}.
For survival response, see details in \code{\link{pmsurv}()}.
}
\examples{

# Count outcome
output_pm <- pm(response = "count",
                cate.model = y ~ age + female + previous_treatment +
                                     previous_cost + previous_number_relapses + offset(log(years)),
                ps.model = trt ~ age + previous_treatment,
                data = countExample,
                higher.y = TRUE,
                score.method = "poisson",
                seed = 999)

# Try:
output_pm$coefficients

# Survival outcome
tau0 <- with(survivalExample,
                 min(quantile(y[trt == "drug1"], 0.95), quantile(y[trt == "drug0"], 0.95)))
output_pm2 <- pm(response = "survival",
                 cate.model = survival::Surv(y, d) ~ age + female
                 + previous_cost + previous_number_relapses,
                 ps.model = trt ~ age + previous_treatment,
                 ipcw.model = ~ age + previous_cost + previous_treatment,
                 data = survivalExample,
                 higher.y = TRUE,
                 score.method = c("poisson", "boosting", "randomForest", "twoReg", "contrastReg"),
                 followup.time = NULL,
                 tau0 = tau0,
                 surv.min = 0.025,
                 initial.predictor.method = "logistic",
                 seed = 999,
                 plot.gbmperf = FALSE)

# Try:
output_pm2$coefficients

# Continuous outcome
output_pm3 <- pm(response = "continuous",
                cate.model = y ~ age +
                                 previous_treatment +
                                 previous_cost +
                                 previous_status_measure,
                init.model = y ~ age +
                                 previous_treatment +
                                 previous_cost +
                                 previous_status_measure,
                ps.model = trt ~ previous_treatment,
                data = meanExample,
                higher.y = FALSE,
                score.method = c("gaussian", "randomForest", "twoReg", "contrastReg"),
                initial.predictor.method = "gaussian",
                seed = 999)

# Try:
output_pm3$coefficients
}
\references{
Yadlowsky, S., Pellegrini, F., Lionetto, F., Braune, S., & Tian, L. (2020).
\emph{Estimation and validation of ratio-based conditional average treatment effects using
observational data. Journal of the American Statistical Association, 1-18.}
\url{https://www.tandfonline.com/doi/full/10.1080/01621459.2020.1772080}
}
\seealso{
\code{\link{cv}()}
}
